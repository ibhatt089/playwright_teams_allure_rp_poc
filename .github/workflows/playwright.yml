name: Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-and-run-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Install Dependencies
        run: npm ci --no-audit --no-fund

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Create .env file with secrets
        run: |
          echo "TEAMS_WEBHOOK_URL=${{ secrets.TEAMS_WEBHOOK_URL }}" >> .env
          echo "TEAMS_USER_NAME=${{ secrets.TEAMS_USER_NAME }}" >> .env
          echo "TEAMS_USER_EMAIL=${{ secrets.TEAMS_USER_EMAIL }}" >> .env
          echo "REPORT_PORTAL_BASE_URL=${{ secrets.REPORT_PORTAL_BASE_URL }}" >> .env
          echo "REPORT_PORTAL_API_KEY=${{ secrets.REPORT_PORTAL_API_KEY }}" >> .env
          echo "REPORT_PORTAL_PROJECT=${{ secrets.REPORT_PORTAL_PROJECT }}" >> .env
          echo "REPORT_PORTAL_LAUNCH_NAME=Playwright_Test_Launch_${{ github.run_number }}" >> .env
          echo 'REPORT_PORTAL_LAUNCH_ATTRIBUTES=Platform:Playwright;POC;Browser:Chrome' >> .env
          PROJECT="chromium"
          echo "PW_PROJECT=$PROJECT" >> .env

      - name: Run Tests
        id: run-tests
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          source ./.env || true
          PROJECT="${PW_PROJECT:-chromium}"
          TEST_CMD="npx playwright test --project=$PROJECT"

          echo "Executing: $TEST_CMD"
          set +e
          eval "$TEST_CMD"
          TEST_EXIT_CODE=$?
          set -e
          echo "$TEST_EXIT_CODE" > test-exit-code-chromium.txt
          if [ "$TEST_EXIT_CODE" -ne 0 ]; then
            echo "Tests failed with exit code: $TEST_EXIT_CODE"
          else
            echo "All tests passed"
          fi
          exit 0

      - name: Save Exit Code
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: exit-code-chromium
          path: test-exit-code-chromium.txt
          retention-days: 1

      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-chromium-${{ github.run_number }}
          path: |
            playwright-report/
            test-results/
            allure-results/
          retention-days: 30
          if-no-files-found: warn

      - name: Test Summary
        if: always()
        run: |
          EXIT_CODE=$(cat test-exit-code-chromium.txt || echo "999")
          echo "### Results - chromium" >> $GITHUB_STEP_SUMMARY
          if [ "$EXIT_CODE" = "0" ]; then
            echo "Status: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "Status: FAILED (exit code: $EXIT_CODE)" >> $GITHUB_STEP_SUMMARY
          fi

      - name: TestBeats Publish
        uses: test-results-reporter/publish@v1
        with:
          config: testbeats.config.json
        if: always()
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          TEAMS_USER_NAME: ${{ secrets.TEAMS_USER_NAME }}
          TEAMS_USER_EMAIL: ${{ secrets.TEAMS_USER_EMAIL }}
          REPORT_PORTAL_API_KEY: ${{ secrets.REPORT_PORTAL_API_KEY }}
          REPORT_PORTAL_BASE_URL: ${{ secrets.REPORT_PORTAL_BASE_URL }}
          REPORT_PORTAL_PROJECT: ${{ secrets.REPORT_PORTAL_PROJECT }}
          REPORT_PORTAL_LAUNCH_NAME: Playwright_Test_Launch_${{ github.run_number }}

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results

      - name: Publish Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          destination_dir: allure-report
          keep_files: false
          force_orphan: true

      - name: Publish Playwright Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: playwright-report
          destination_dir: playwright-report
          keep_files: true

